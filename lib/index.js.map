{"version":3,"sources":["../src/index.es6"],"names":["Logger","name","loggerMap","has","get","logger","set","defaultLogger","configLogLevel","logLevel","LOG_LEVEL_DEBUG","LOG_LEVEL_INFO","LOG_LEVEL_WARN","LOG_LEVEL_ERROR","error","newLogLevel","isNaN","pattern","args","unshift","console","log","apply","debug","warn","Map"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * 日志工具类 <br/>\n *\n * <p>\n * 工程变大之后, 日志就很重要了, 总不能一直console.log.\n * 本来想看看有没有现成的工具, 找到一个log4js的库, 但只能用在node环境下, 浏览器环境下似乎没什么好用的.\n * 作为一个用惯了slf4j的人, 干脆自己写个吧, 练练手.\n * 目前有以下功能:\n *   <ul>\n *       <li>支持常用的日志级别: debug/info/warn/error, 说实话其他的级别极少用到</li>\n *       <li>支持变量替换: 类似slf4j中的logger.info(\"a={}\",a)这种, 其实console本身已经支持的</li>\n *       <li>根据日志级别设置样式: debug是黑色, info是默认, warn是黄色, error是红色, 看起来清晰很多</li>\n *       <li>定义每个logger的名字: 也算是常规功能了吧</li>\n *   </ul>\n * 我是尽量按着slf4j的习惯来设计的, 目前还比较简单.\n * 不支持pattern/appender之类的, 但对于二手前端来说, 也算够用了.\n * </p>\n */\nclass Logger {\n\n  // 定义一些预设的日志级别\n  // 目前只有4种级别\n\n  static LOG_LEVEL_DEBUG = 1;\n  static LOG_LEVEL_INFO = 2;\n  static LOG_LEVEL_WARN = 3;\n  static LOG_LEVEL_ERROR = 4;\n\n  /*暂存所有logger*/\n  static loggerMap = new Map();\n\n  /*默认的logger*/\n  static defaultLogger = new Logger();\n\n  /**\n   * 获取一个Logger实例\n   *\n   * @param name\n   * @returns {*}\n   */\n  static getLogger(name) {\n    if (name && name !== '') {\n      // 缓存\n      if (Logger.loggerMap.has(name)) {\n        return Logger.loggerMap.get(name);\n      }\n\n      const logger = new Logger(name);\n      Logger.loggerMap.set(name, logger);\n      return logger;\n    } else {\n      return Logger.defaultLogger;\n    }\n  }\n\n  constructor(name, configLogLevel = \"info\") {\n    this.name = name;  // logger的名字\n\n    if (configLogLevel === 'debug') {\n      this.logLevel = Logger.LOG_LEVEL_DEBUG;\n    } else if (configLogLevel === 'info') {\n      this.logLevel = Logger.LOG_LEVEL_INFO;\n    } else if (configLogLevel === 'warn') {\n      this.logLevel = Logger.LOG_LEVEL_WARN;\n    } else if (configLogLevel === 'error') {\n      this.logLevel = Logger.LOG_LEVEL_ERROR;\n    } else {\n      // 默认都是info级别\n      this.error('unsupported logLevel: %s, use INFO instead', configLogLevel);\n      this.logLevel = Logger.LOG_LEVEL_INFO;\n    }\n  }\n\n  /**\n   * 设置日志级别, 只有4种级别可选\n   *\n   * @param newLogLevel 1~4之间的一个数字\n   */\n  setLogLevel(newLogLevel) {\n    if (isNaN(newLogLevel)) {\n      this.error('setLogLevel error, not a number: %s', newLogLevel);\n    }\n\n    if (newLogLevel < 1 || newLogLevel > 4) {\n      this.error('setLogLevel error, input = %s, must between 1 and 4', newLogLevel);\n    }\n\n    this.logLevel = newLogLevel;\n  }\n\n  /**\n   * 打印info日志\n   *\n   * @param pattern 日志格式, 支持%d/%s等占位符\n   * @param args 可变参数, 用于替换pattern中的占位符\n   */\n  info(pattern, ...args) {\n    // 先判断日志级别\n    if (this.logLevel > Logger.LOG_LEVEL_INFO)\n      return;\n\n    if (this.name)\n      args.unshift(`${this.name}: ${pattern}`);\n    else\n      args.unshift(pattern);\n    console.log.apply(console, args);\n  }\n\n  /**\n   * 打印error日志\n   *\n   * @param pattern\n   * @param args\n   */\n  error(pattern, ...args) {\n    if (this.logLevel > Logger.LOG_LEVEL_ERROR)\n      return;\n\n    args.unshift('background: red; color: #bada55;');\n    if (this.name)\n      args.unshift(`%c${this.name}: ${pattern}`);\n    else\n      args.unshift(`%c${pattern}`);\n    console.error.apply(console, args);\n  }\n\n  /**\n   * 打印debug日志\n   *\n   * @param pattern\n   * @param args\n   */\n  debug(pattern, ...args) {\n    if (this.logLevel > Logger.LOG_LEVEL_DEBUG)\n      return;\n\n    args.unshift('background: black; color: #bada55;');\n    if (this.name)\n      args.unshift(`%c${this.name}: ${pattern}`);\n    else\n      args.unshift(`%c${pattern}`);\n    console.debug.apply(console, args);\n\n  }\n\n  /**\n   * 打印warn日志\n   *\n   * @param pattern\n   * @param args\n   */\n  warn(pattern, ...args) {\n    if (this.logLevel > Logger.LOG_LEVEL_WARN)\n      return;\n\n    args.unshift('background: yellow; color: black;');\n    if (this.name)\n      args.unshift(`%c${this.name}: ${pattern}`);\n    else\n      args.unshift(`%c${pattern}`);\n    console.warn.apply(console, args);\n  }\n}\n\nexport default Logger;\n"]}